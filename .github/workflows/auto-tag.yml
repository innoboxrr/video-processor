on:
  push:
      branches:
          - master

jobs:
  increment-version:
      runs-on: ubuntu-latest

      steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest tag
        id: get_tag
        run: |
            latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
            if [ -z "$latest_tag" ]; then
              echo "::set-output name=tag::0.0.0"
            else
              echo "::set-output name=tag::$latest_tag"
            fi

      - name: Bump version
        id: bump_version
        run: |
            IFS='.' read -r -a version_parts <<< "${{ steps.get_tag.outputs.tag }}"
            major=${version_parts[0]}
            minor=${version_parts[1]}
            patch=${version_parts[2]}
            new_patch=$((patch + 1))
            new_tag="$major.$minor.$new_patch"
            echo "::set-output name=new_tag::$new_tag"

      - name: Create new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            git tag ${{ steps.bump_version.outputs.new_tag }}
            git push origin ${{ steps.bump_version.outputs.new_tag }}

      - name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"tag_name": "${{ steps.bump_version.outputs.new_tag }}", "name": "Release ${{ steps.bump_version.outputs.new_tag }}", "draft": false, "prerelease": false}' \
            https://api.github.com/repos/${{ github.repository }}/releases
